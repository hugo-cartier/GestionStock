<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPFGestionStock"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:Custom="http://www.galasoft.ch/mvvmlight" xmlns:Behavior="clr-namespace:WPFGestionStock.Behavior" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" x:Class="WPFGestionStock.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800" DataContext="{Binding Main, Mode=OneWay, Source={StaticResource Locator}}">
    <Grid x:Name="grid1">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="VisualStateGroup">
                <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0:0:1">
                        <VisualTransition.GeneratedEasingFunction>
                            <BackEase EasingMode="EaseInOut"/>
                        </VisualTransition.GeneratedEasingFunction>
                    </VisualTransition>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="NormalVisualState">
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid">
                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                        <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" Storyboard.TargetName="grid">
                            <DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
                        </BooleanAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="grid">
                            <EasingDoubleKeyFrame KeyTime="0" Value="-1500"/>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="AddArticleVisualState">
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid">
                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                        </DoubleAnimationUsingKeyFrames>
                        <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" Storyboard.TargetName="grid">
                            <DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
                        </BooleanAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="grid">
                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="LoadingVisualStateGroup">
                <VisualState x:Name="IsLoadingVisualState"/>
                <VisualState x:Name="LoadedVisualState"/>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <i:Interaction.Behaviors>
            <ei:DataStateBehavior Binding="{Binding AddStockManager.IsAjouterArticle}" Value="True" TrueState="AddArticleVisualState" FalseState="NormalVisualState"/>
        </i:Interaction.Behaviors>
        <StackPanel>
            <Button Content="Charger stock" Command="{Binding ChargerStockCommand}" />
            <ListBox ItemsSource="{Binding Articles}" />
        </StackPanel>
        <Button Content="Ajouter article" Command="{Binding AddStockManager.AfficherMasquerArticleStockCommand}" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0,0,10,10" />
        <Grid x:Name="grid" RenderTransformOrigin="0.5,0.5">
            <Grid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Grid.RenderTransform>
            <!--  Visibility="{Binding AddStockManager.IsAjouterArticle, Converter={StaticResource BoolToVis}}" -->
            <Rectangle Fill="#CCFFFFFF" />
            <Grid x:Name="GridAjoutArticle" Width="450" Background="#FFF0F0F0" VerticalAlignment="Center" HorizontalAlignment="Center">
                <Grid.Effect>
                    <DropShadowEffect ShadowDepth="10" BlurRadius="25"/>
                </Grid.Effect>
                <Grid.RowDefinitions>
                    <RowDefinition Height="35"/>
                    <RowDefinition Height="35"/>
                    <RowDefinition Height="35"/>
                    <RowDefinition Height="35"/>
                    <RowDefinition Height="35"/>
                    <RowDefinition Height="35"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="3*"/>
                </Grid.ColumnDefinitions>

                <TextBlock Text="Référence :" Grid.Row="0" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <TextBox Text="{Binding AddStockManager.ArticleAjoutVM.Reference, Mode=TwoWay}" Grid.Row="0" Grid.Column="1" VerticalAlignment="Center" Margin="0,0,10,0">
                    <i:Interaction.Behaviors>
                        <Behavior:FormatReferenceBehavior/>
                    </i:Interaction.Behaviors>
                </TextBox>
                <TextBlock Text="Désignation :" Grid.Row="1" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <TextBox Text="{Binding AddStockManager.ArticleAjoutVM.Designation, Mode=TwoWay}" Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" Margin="0,0,10,0">
                    <i:Interaction.Behaviors>
                        <Behavior:LimitCharBehavior/>
                    </i:Interaction.Behaviors>
                </TextBox>
                <TextBlock Text="Prix vente :" Grid.Row="2" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <TextBox Text="{Binding AddStockManager.ArticleAjoutVM.PrixVente, Mode=TwoWay}" Grid.Row="2" Grid.Column="1" VerticalAlignment="Center" Margin="0,0,10,0">
                    <i:Interaction.Behaviors>
                        <Behavior:ForceNumericBehavior/>
                    </i:Interaction.Behaviors>
                </TextBox>
                <StackPanel Orientation="Horizontal" Grid.Row="3" Grid.Column="0">
                    <TextBlock Text="Quantité stock :" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    <Rectangle Width="5" Height="5" Fill="{Binding AddStockManager.ArticleAjoutVM.QteStock, Converter={StaticResource QteStockToCouleur}}" />
                </StackPanel>
                <TextBox Text="{Binding AddStockManager.ArticleAjoutVM.QteStock, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="3" Grid.Column="1" VerticalAlignment="Center" Margin="0,0,10,0">
                    <i:Interaction.Behaviors>
                        <Behavior:ForceNumericBehavior CanBeNegative="False"/>
                    </i:Interaction.Behaviors>
                </TextBox>
                <TextBlock Text="Visible :" Grid.Row="4" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" />
                <CheckBox Grid.Row="4" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center" IsChecked="{Binding AddStockManager.ArticleAjoutVM.EstVisible}" />
                <StackPanel Grid.Row="5" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,5">
                    <Button Content="Annuler" Width="100" HorizontalAlignment="Right" IsCancel="True" Command="{Binding AddStockManager.AfficherMasquerArticleStockCommand}" Style="{DynamicResource ButtonCancelStyle}"/>
                    <Button Content="Valider" Width="100" HorizontalAlignment="Right" IsCancel="True" Command="{Binding AddStockManager.ValiderArticleStockCommand}" Margin="10,0,10,0" BorderBrush="#FF2B2929" FontWeight="Bold"/>
                </StackPanel>

            </Grid>
        </Grid>

    </Grid>
</Window>
